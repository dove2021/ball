<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <description>Spring Shiro</description>
	
	<bean id="myCredentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="MD5"/>
		<property name="hashIterations" value="1"/>
	</bean>
	
	<bean id="authorizationInfoRealm" class="com.tbug.ball.realm.AuthorizationRealm">
		<property name="credentialsMatcher" ref="myCredentialsMatcher"/>
	</bean>
	
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="shiroEhcacheManager"/>
		<property name="realm" ref="authorizationInfoRealm" />
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>	

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/index" />
		<property name="unauthorizedUrl" value="/unauthorized" />

		<property name="filters">
			<!-- 默认的authc对应的FormAuthenticationFilter，会对loginUrl的Post请求自动处理登录，PassThruAuthenticationFilter则不会。-->
			<map>
				<entry key="authc">
					<bean class="com.tbug.ball.interceptor.AccessAuthenticationFilter"/>
				</entry>
			</map>
		</property>

		<property name="filterChainDefinitions">
			<value>
				/static/** = anon
				/index = anon
				/login = anon
				/login/check = anon
				/generateVerifyPicCode = anon
				/customer/register/** = anon
				/** = authc
			</value>
		</property>
	</bean>

</beans>