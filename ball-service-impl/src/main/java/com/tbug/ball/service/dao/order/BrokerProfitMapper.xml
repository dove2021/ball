<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tbug.ball.service.dao.order.BrokerProfitMapper">
	<resultMap id="BaseResultMap"
		type="com.tbug.ball.service.model.order.BrokerProfit">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="level_num" property="levelNum" jdbcType="TINYINT" />
		<result column="amount_scale" property="amountScale" jdbcType="DECIMAL" />
		<result column="scale_one" property="scaleOne" jdbcType="DECIMAL" />
		<result column="scale_two" property="scaleTwo" jdbcType="DECIMAL" />
		<result column="scale_three" property="scaleThree" jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Base_Column_List">
		id, level_num, amount_scale, scale_one, scale_two, scale_three
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from broker_profit
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from broker_profit
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.tbug.ball.service.model.order.BrokerProfit">
		insert into broker_profit (id, level_num, amount_scale,
		scale_one, scale_two, scale_three
		)
		values (#{id,jdbcType=INTEGER}, #{levelNum,jdbcType=TINYINT},
		#{amountScale,jdbcType=DECIMAL},
		#{scaleOne,jdbcType=DECIMAL}, #{scaleTwo,jdbcType=DECIMAL}, #{scaleThree,jdbcType=DECIMAL}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.tbug.ball.service.model.order.BrokerProfit">
		insert into broker_profit
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="levelNum != null">
				level_num,
			</if>
			<if test="amountScale != null">
				amount_scale,
			</if>
			<if test="scaleOne != null">
				scale_one,
			</if>
			<if test="scaleTwo != null">
				scale_two,
			</if>
			<if test="scaleThree != null">
				scale_three,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="levelNum != null">
				#{levelNum,jdbcType=TINYINT},
			</if>
			<if test="amountScale != null">
				#{amountScale,jdbcType=DECIMAL},
			</if>
			<if test="scaleOne != null">
				#{scaleOne,jdbcType=DECIMAL},
			</if>
			<if test="scaleTwo != null">
				#{scaleTwo,jdbcType=DECIMAL},
			</if>
			<if test="scaleThree != null">
				#{scaleThree,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.tbug.ball.service.model.order.BrokerProfit">
		update broker_profit
		<set>
			<if test="levelNum != null">
				level_num = #{levelNum,jdbcType=TINYINT},
			</if>
			<if test="amountScale != null">
				amount_scale = #{amountScale,jdbcType=DECIMAL},
			</if>
			<if test="scaleOne != null">
				scale_one = #{scaleOne,jdbcType=DECIMAL},
			</if>
			<if test="scaleTwo != null">
				scale_two = #{scaleTwo,jdbcType=DECIMAL},
			</if>
			<if test="scaleThree != null">
				scale_three = #{scaleThree,jdbcType=DECIMAL},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tbug.ball.service.model.order.BrokerProfit">
		update broker_profit
		set level_num = #{levelNum,jdbcType=TINYINT},
		amount_scale = #{amountScale,jdbcType=DECIMAL},
		scale_one = #{scaleOne,jdbcType=DECIMAL},
		scale_two = #{scaleTwo,jdbcType=DECIMAL},
		scale_three = #{scaleThree,jdbcType=DECIMAL}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectByLevelNum" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from broker_profit
		where level_num = #{levelNum,jdbcType=TINYINT}
	</select>
	<select id="listAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from broker_profit	
	</select>
</mapper>