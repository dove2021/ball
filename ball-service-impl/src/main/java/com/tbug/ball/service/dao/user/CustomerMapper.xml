<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tbug.ball.service.dao.user.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.tbug.ball.service.model.user.Customer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="customer_code" property="customerCode" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="CHAR" />
    <result column="age" property="age" jdbcType="SMALLINT" />
    <result column="phone_no" property="phoneNo" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="register_ip" property="registerIp" jdbcType="VARCHAR" />
    <result column="broker_id" property="brokerId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="level_num" property="levelNum" jdbcType="TINYINT" />
    <result column="level_code" property="levelCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, member_id, customer_code, login_name, password, salt, nick_name, real_name, gender, 
    age, phone_no, create_date, register_ip, broker_id, status, level_num, level_code
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.tbug.ball.service.model.user.Customer" >
    insert into customer (id, member_id, customer_code, 
      login_name, password, salt, 
      nick_name, real_name, gender, 
      age, phone_no, create_date, 
      register_ip, broker_id, status, level_code, level_num
      )
    values (#{id,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{customerCode,jdbcType=VARCHAR}, 
      #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{age,jdbcType=SMALLINT}, #{phoneNo,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{registerIp,jdbcType=VARCHAR}, #{brokerId,jdbcType=INTEGER}, #{status,jdbcType=CHAR},
      #{levelCode,jdbcType=VARCHAR}, #{levelNum,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.tbug.ball.service.model.user.Customer" >
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="customerCode != null" >
        customer_code,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="phoneNo != null" >
        phone_no,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="registerIp != null" >
        register_ip,
      </if>
      <if test="brokerId != null" >
        broker_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="levelCode != null" >
        level_code,
      </if>
      <if test="levelNum != null" >
        level_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="customerCode != null" >
        #{customerCode,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=SMALLINT},
      </if>
      <if test="phoneNo != null" >
        #{phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null" >
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="brokerId != null" >
        #{brokerId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="levelCode != null" >
        #{levelCode,jdbcType=VARCHAR},
      </if>
      <if test="levelNum != null" >
        #{levelNum,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tbug.ball.service.model.user.Customer" >
    update customer
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="customerCode != null" >
        customer_code = #{customerCode,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=SMALLINT},
      </if>
      <if test="phoneNo != null" >
        phone_no = #{phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null" >
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="brokerId != null" >
        broker_id = #{brokerId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="levelCode != null" >
        level_code = #{levelCode,jdbcType=VARCHAR},
      </if>
      <if test="levelNum != null" >
        level_num = #{levelNum,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tbug.ball.service.model.user.Customer" >
    update customer
    set member_id = #{memberId,jdbcType=INTEGER},
      customer_code = #{customerCode,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      age = #{age,jdbcType=SMALLINT},
      phone_no = #{phoneNo,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      broker_id = #{brokerId,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      level_code = #{levelCode,jdbcType=VARCHAR},
      level_num = #{levelNum,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCode" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where customer_code = #{customerCode,jdbcType=VARCHAR}
  </select>
  <select id="selectByLoginName" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where login_name = #{loginName,jdbcType=VARCHAR}
  </select>
  <select id="selectByPhoneNo" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where phone_no = #{phoneNo,jdbcType=VARCHAR}
  </select>
  <select id="listCustomerByMap" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    <where>
    	<if test="customerCode != null and customerCode != ''">AND customer_code = #{customerCode,jdbcType=VARCHAR}</if>
    	<if test="loginName != null and loginName != ''">AND login_name = #{loginName,jdbcType=VARCHAR}</if>
    	<if test="nickName != null and nickName != ''">AND nick_name = #{nickName,jdbcType=VARCHAR}</if>
    	<if test="phoneNo != null and phoneNo != ''">AND phone_no = #{phoneNo,jdbcType=VARCHAR}</if>
    	<if test="createDateStart != null and createDateStart != ''">AND create_date &gt;= #{createDateStart,jdbcType=TIMESTAMP}</if>
    	<if test="createDateEnd != null and createDateEnd != ''">AND create_date &lt;= #{createDateEnd,jdbcType=TIMESTAMP}</if>
    	<if test="status != null and status != ''">AND status = #{status,jdbcType=CHAR}</if>
    	<if test="brokerId != null" >AND broker_id = #{brokerId,jdbcType=INTEGER}</if>
    	<if test="levelCode != null and levelCode != ''" >AND level_code like CONCAT(#{levelCode,jdbcType=VARCHAR},'%')</if>
    	<if test="levelNum != null and levelNum != ''" >AND level_num = #{levelNum,jdbcType=TINYINT}</if>
    </where>
    <choose>
  		<when test="field != null and field != '' and sort != null and sort != ''">
  			ORDER BY ${field} ${sort}
  		</when>
  		<otherwise>
  			order by id
  		</otherwise>
  	</choose>
  	<if test="offset != null and offset != '' and limit != null and limit != ''">
  		LIMIT ${offset}, ${limit}
  	</if>
  </select>
  <select id="countCustomerByMap" resultType="java.lang.Integer">
    select count(*)
    from customer
    <where>
    	<if test="customerCode != null and customerCode != ''">AND customer_code = #{customerCode,jdbcType=VARCHAR}</if>
    	<if test="loginName != null and loginName != ''">AND login_name = #{loginName,jdbcType=VARCHAR}</if>
    	<if test="nickName != null and nickName != ''">AND nick_name = #{nickName,jdbcType=VARCHAR}</if>
    	<if test="phoneNo != null and phoneNo != ''">AND phone_no = #{phoneNo,jdbcType=VARCHAR}</if>
    	<if test="createDateStart != null and createDateStart != ''">AND create_date &gt;= #{createDateStart,jdbcType=TIMESTAMP}</if>
    	<if test="createDateEnd != null and createDateEnd != ''">AND create_date &lt;= #{createDateEnd,jdbcType=TIMESTAMP}</if>
    	<if test="status != null and status != ''">AND status = #{status,jdbcType=CHAR}</if>
    	<if test="brokerId != null" >AND broker_id = #{brokerId,jdbcType=INTEGER}</if>
    	<if test="levelCode != null and levelCode != ''" >AND level_code = #{levelCode,jdbcType=VARCHAR}</if>
    	<if test="levelNum != null and levelNum != ''" >AND level_num = #{levelNum,jdbcType=TINYINT}</if>
    </where>
  </select>
  <select id="selectByLevelCode" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from customer
    where level_code = #{levelCode,jdbcType=VARCHAR}
  </select>
</mapper>