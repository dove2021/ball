<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tbug.ball.service.dao.account.MemberAccountMapper">
	<resultMap id="BaseResultMap"
		type="com.tbug.ball.service.model.account.MemberAccount">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="member_id" property="memberId" jdbcType="INTEGER" />
		<result column="member_code" property="memberCode" jdbcType="CHAR" />
		<result column="member_name" property="memberName" jdbcType="VARCHAR" />
		<result column="balance" property="balance" jdbcType="DECIMAL" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="account_password" property="accountPassword"
			jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="CHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, member_id, member_code, member_name, balance, create_date,
		account_password,
		salt, status
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from member_account
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from member_account
		where id = #{id,jdbcType=INTEGER}
		for update
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from member_account
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.tbug.ball.service.model.account.MemberAccount">
		insert into member_account (id, member_id, member_code,
		member_name, balance, create_date,
		account_password, salt, status
		)
		values (#{id,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER},
		#{memberCode,jdbcType=CHAR},
		#{memberName,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL}, #{createDate,jdbcType=TIMESTAMP},
		#{accountPassword,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
		#{status,jdbcType=CHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.tbug.ball.service.model.account.MemberAccount">
		insert into member_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="memberId != null">
				member_id,
			</if>
			<if test="memberCode != null">
				member_code,
			</if>
			<if test="memberName != null">
				member_name,
			</if>
			<if test="balance != null">
				balance,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="accountPassword != null">
				account_password,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="memberId != null">
				#{memberId,jdbcType=INTEGER},
			</if>
			<if test="memberCode != null">
				#{memberCode,jdbcType=CHAR},
			</if>
			<if test="memberName != null">
				#{memberName,jdbcType=VARCHAR},
			</if>
			<if test="balance != null">
				#{balance,jdbcType=DECIMAL},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="accountPassword != null">
				#{accountPassword,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.tbug.ball.service.model.account.MemberAccount">
		update member_account
		<set>
			<if test="memberId != null">
				member_id = #{memberId,jdbcType=INTEGER},
			</if>
			<if test="memberCode != null">
				member_code = #{memberCode,jdbcType=CHAR},
			</if>
			<if test="memberName != null">
				member_name = #{memberName,jdbcType=VARCHAR},
			</if>
			<if test="balance != null">
				balance = #{balance,jdbcType=DECIMAL},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="accountPassword != null">
				account_password = #{accountPassword,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=CHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tbug.ball.service.model.account.MemberAccount">
		update member_account
		set member_id = #{memberId,jdbcType=INTEGER},
		member_code = #{memberCode,jdbcType=CHAR},
		member_name = #{memberName,jdbcType=VARCHAR},
		balance = #{balance,jdbcType=DECIMAL},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		account_password = #{accountPassword,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR},
		status = #{status,jdbcType=CHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectByMap" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from member_account
		<where>
			<if test="memberId != null and memberId != ''">AND member_id = #{memberId,jdbcType=INTEGER}</if>
			<if test="memberCode != null and memberCode != ''">AND member_code = #{memberCode,jdbcType=CHAR}</if>
			<if test="memberName != null and memberName != ''">AND member_name like CONCAT('%',#{memberName,jdbcType=VARCHAR},'%')</if>
			<if test="createDateStart != null and createDateStart != ''">AND create_date &gt;= #{createDateStart,jdbcType=TIMESTAMP}</if>
			<if test="createDateEnd != null and createDateEnd != ''">AND create_date &lt;= #{createDateEnd,jdbcType=TIMESTAMP}</if>
			<if test="status != null and status != ''">AND status = #{status,jdbcType=CHAR}</if>
		</where>
		<choose>
	  		<when test="field != null and field != ''">
	  			ORDER BY #{field,jdbcType=VARCHAR} <choose><when test="sort == 'DESC' or sort == 'desc'">DESC</when><otherwise>ASC</otherwise></choose>
	  		</when>
			<otherwise>
				order by id DESC
			</otherwise>
		</choose>
	  	<if test="offset != null and limit != null">
	  		LIMIT #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
	  	</if>
	</select>
	<select id="countByMap" resultType="java.lang.Integer">
		select count(*)
		from member_account
		<where>
			<if test="memberId != null and memberId != ''">AND member_id = #{memberId,jdbcType=INTEGER}</if>
			<if test="memberCode != null and memberCode != ''">AND member_code = #{memberCode,jdbcType=CHAR}</if>
			<if test="memberName != null and memberName != ''">AND member_name like CONCAT('%',#{memberName,jdbcType=VARCHAR},'%')</if>
			<if test="createDateStart != null and createDateStart != ''">AND create_date &gt;= #{createDateStart,jdbcType=TIMESTAMP}</if>
			<if test="createDateEnd != null and createDateEnd != ''">AND create_date &lt;= #{createDateEnd,jdbcType=TIMESTAMP}</if>
			<if test="status != null and status != ''">AND status = #{status,jdbcType=CHAR}</if>
		</where>
	</select>
	<select id="selectByMemberId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from member_account
		where member_id = #{memberId,jdbcType=INTEGER}
	</select>
</mapper>