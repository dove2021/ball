<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tbug.ball.service.dao.account.CustomerAccountMapper" >
  <resultMap id="BaseResultMap" type="com.tbug.ball.service.model.account.CustomerAccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="account_password" property="accountPassword" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, customer_id, balance, create_date, account_password, salt, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tbug.ball.service.model.account.CustomerAccount" >
    insert into customer_account (id, customer_id, balance, 
      create_date, account_password, salt, 
      status)
    values (#{id,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{balance,jdbcType=DECIMAL}, 
      #{createDate,jdbcType=TIMESTAMP}, #{accountPassword,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tbug.ball.service.model.account.CustomerAccount" >
    insert into customer_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="accountPassword != null" >
        account_password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="accountPassword != null" >
        #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tbug.ball.service.model.account.CustomerAccount" >
    update customer_account
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="accountPassword != null" >
        account_password = #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tbug.ball.service.model.account.CustomerAccount" >
    update customer_account
    set customer_id = #{customerId,jdbcType=INTEGER},
      balance = #{balance,jdbcType=DECIMAL},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      account_password = #{accountPassword,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>